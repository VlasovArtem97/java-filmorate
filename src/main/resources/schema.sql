CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(40),
    login VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id INTEGER REFERENCES users(user_id),
    friend_id INTEGER REFERENCES users(user_id),
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS ratings_mpa (
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(150),
    description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR (40)
);

CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(40),
    description VARCHAR(200),
    release_date DATE,
    duration INTEGER,
    rating_id INTEGER REFERENCES ratings_mpa(rating_id)
);

CREATE TABLE IF NOT EXISTS genres_films (
    film_id INTEGER REFERENCES films(film_id),
    genre_id INTEGER REFERENCES genres(genre_id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
    user_id INTEGER REFERENCES users(user_id),
    film_id INTEGER REFERENCES films(film_id),
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content TEXT,
    is_positive BOOLEAN NOT NULL,
    user_id INTEGER NOT NULL REFERENCES users(user_id),
    film_id INTEGER NOT NULL REFERENCES films(film_id),
    useful INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS reviews_ratings_films_by_users (
    user_id INTEGER REFERENCES users(user_id),
    review_id INTEGER REFERENCES reviews(review_id),
    evaluation VARCHAR(10),
    PRIMARY KEY (user_id, review_id)
);

CREATE TABLE IF NOT EXISTS directors (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS film_director (
  film_id INTEGER REFERENCES films(film_id),
  director_id INTEGER REFERENCES directors(id),
  PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS events (
    event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp TIMESTAMP NOT NULL,
    user_id INTEGER REFERENCES users(user_id) NOT NULL,
    event_type VARCHAR(8) NOT NULL,
    operation VARCHAR(8) NOT NULL,
    entity_id INTEGER
);
